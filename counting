    <?xml version="1.0" encoding="iso-8859-1"?>
    <!DOCTYPE muclient>
    <!-- Saved on Thursday, April 16, 2009, 2:54 PM -->
    <!-- MuClient version 4.37 -->

    <!-- Plugin "DMSkillController" generated by Plugin Wizard -->

    <muclient>
    <plugin
       name="DMSkillController"
       id="25b31384e8c63afb6da202d2"
       language="lua"
       purpose="Track, autocorrect, and store skills for DartMud"
       save_state="y"
       date_written="2009-04-16 14:53:25"
       requires="4.37"
       version="1.0"
       >

    </plugin>


    <!--  Get our standard constants -->

    <include name="constants.pys"/>

    <!--  Triggers  -->

    <triggers>
      <trigger
       enabled="y"
       match="^([A-Za-z].*)\:(\s..)(Unskilled|A Tyro|A Novice|A Beginner|Poor|Not Very Good|Below Average|Average|Above Average|Able|Fair|Proficient|Good|Adroit|Very Good|Excellent|An Expert|Superb|A Master|Eminent|An Adept|Renowned|A High Master|Consummate|A Virtuoso|A Grand Master|Legendary)\.$"
       omit_from_output="y"
       regexp="y"
       script="SkillCheck"
       sequence="100"
      >
      </trigger>
      <trigger
       enabled="y"
       match="^([A-Za-z]\S*)(\s*)(\S*)(\s*)(\d*) (very dim red|dim red|red|orangish-red|reddish-orange|orange|yellowish-orange|orangish-yellow|yellow|greenish-yellow|yellowish-green|green|bluish-green|greenish-blue|blue)(\s*)(Unskilled|Tyro|Novice|Beginner|Poor|NVG|BA|Average|AA|Able|Fair|Proficient|Good|Adroit|VG|Excellent|Expert|Superb|Master|Eminent|Adept|Renowned|HM|Consummate|Virtuoso|GM|Legendary)$"
       omit_from_output="y"
       regexp="y"
       script="SpellCheck"
       sequence="100"
      >
      </trigger>
      <trigger
       enabled="y"
       keep_evaluating="y"
       match="^\* You think your (.*) skill has improved\. \*$"
       omit_from_output="y"
       regexp="y"
       script="SkillImprove"
       sequence="100"
      >
      </trigger>
    </triggers>

    <!--  Script  -->


    <script>
    <![CDATA[
    function SkillImprove(TriggerName, trig_line, wildcards):

       --Concatonate all the variables passed by the MUSHclient
       vName = ''.join([wildcards[x] for x in range(len(wildcards)-1)])

       --Replace invalid characters with other characters to store as variables
       vName = vName.replace(' ', '_').replace('\'', '').replace('-', '_').replace('#', '_')

       --If the variable doesn't currently have a value give it
       --the value of 1, else increment it by 1
       if not GetVariable(vName):
          vValue = 1
       else
          vValue = int(GetVariable(vName)) .. 1

       --Display in the command window the improvement message
       --with the corresponding number of improvements added in
       SetVariable(vName, str(vValue))
       ColourTell('#00FFFF', '', '* You think your ' .. str(vName))
       ColourTell('#FFFFFF', '', ' [')
       ColourTell('#FF0000', '', str(vValue))
       ColourTell('#FFFFFF', '', '] ')
       ColourNote('#00FFFF', '', 'skill has improved. *' )
end

    function SkillCheck(TriggerName, trig_line, wildcards):

       --Store the variables passed by MUSHclient
       vStringName = wildcards[0]
       Space1 = wildcards[1]
       vDesc = wildcards[2]

       --Replace invalid characters with other characters to store as variables
       vName = vStringName.replace(' ', '_').replace('\'', '').replace('-', '_').replace('#', '_')

       --If the Skill doesn't currently have a value give it
       --the value of 1
       if not GetVariable(vName):
          vValue = 1
       else
          vValue = int(GetVariable(vName))

       --Check to see if the description of the skill level
       --given by the mud corresponds with the skill level
       --stored in the associated variable, if it does not
       --correct it

       if vDesc == "Unskilled":
          if vValue > 3: vValue = 3
       elseif vDesc == "A Tyro":
          if vValue < 4: vValue = 4
          elseif vValue > 9: vValue = 9
       elseif vDesc == "A Novice":
          if vValue < 10: vValue = 10
          elseif vValue > 17: vValue = 17
       elseif vDesc == "A Beginner":
          if vValue < 18: vValue = 18
          elseif vValue > 29: vValue = 29
       elseif vDesc == "Poor":
          if vValue < 30: vValue = 30
          elseif vValue > 49: vValue = 49
       elseif vDesc == "Not Very Good":
          if vValue < 50: vValue = 50
          elseif vValue > 69: vValue = 69
       elseif vDesc == "Below Average":
          if vValue < 70: vValue = 70
          elseif vValue > 89: vValue = 89
       elseif vDesc == "Average":
          if vValue < 90: vValue = 90
          elseif vValue > 109: vValue = 109
       elseif vDesc == "Above Average":
          if vValue < 110: vValue = 110
          elseif vValue > 134: vValue = 134
       elseif vDesc == "Able":
          if vValue < 135: vValue = 135
          elseif vValue > 164: vValue = 164
       elseif vDesc == "Fair":
          if vValue < 165: vValue = 165
          elseif vValue > 199: vValue = 199
       elseif vDesc == "Proficient":
          if vValue < 200: vValue = 200
          elseif vValue > 239: vValue = 239
       elseif vDesc == "Good":
          if vValue < 240: vValue = 240
          elseif vValue > 284: vValue = 284
       elseif vDesc == "Adroit":
          if vValue < 285: vValue = 285
          elseif vValue > 334: vValue = 334
       elseif vDesc == "Very Good":
          if vValue < 335: vValue = 335
          elseif vValue > 389: vValue = 389
       elseif vDesc == "Excellent":
          if vValue < 390: vValue = 390
          elseif vValue > 449: vValue = 449
       elseif vDesc == "An Expert":
          if vValue < 450: vValue = 450
          elseif vValue > 514: vValue = 514
       elseif vDesc == "Superb":
          if vValue < 515: vValue = 515
          elseif vValue > 584: vValue = 584
       elseif vDesc == "A Master":
          if vValue < 585: vValue = 585
          elseif vValue > 659: vValue = 659
       elseif vDesc == "Eminent":
          if vValue < 660: vValue = 660
          elseif vValue > 739: vValue = 739
       elseif vDesc == "An Adept":
          if vValue < 740: vValue = 740
          elseif vValue > 824: vValue = 824
       elseif vDesc == "Renowned":
          if vValue < 825: vValue = 825
          elseif vValue > 919: vValue = 919
       elseif vDesc == "A High Master":
          if vValue < 920: vValue = 920
          elseif vValue > 1049: vValue = 1049
       elseif vDesc == "Consummate":
          if vValue < 1050: vValue = 1050
          elseif vValue > 1199: vValue = 1199
       elseif vDesc == "A Virtuoso":
          if vValue < 1200: vValue = 1200
          elseif vValue > 1399: vValue = 1399
       elseif vDesc == "A Grand Master":
          if vValue < 1400: vValue = 1400
          elseif vValue > 1699: vValue = 1699
       elseif vDesc == "Legendary":
          if vValue < 1700: vValue = 1700

       SetVariable(vName, str(vValue))

       --Display the skill and description in the standard DM
       --fashion appending the variable value to the end
       ColourTell('#CCCCCC', '', str(vStringName) .. ':' .. str(Space1) .. str(vDesc))
       ColourTell('#FFFFFF', '', ' [')
       ColourTell('#FF0000', '', str(vValue))
       ColourNote('#FFFFFF', '', ']')
end

    function SpellCheck(TriggerName, trig_line, wildcards):

       --Store the variables passed by MUSHclient
       vAbbr = wildcards[0]
       vSpace1 = wildcards[1]
       vStringName = wildcards[2]
       vSpace2 = wildcards[3]
       vTime = wildcards[4]
       vCost = wildcards[5]
       vSpace3 = wildcards[6]
       vDesc = wildcards[7]

       --Replace invalid characters with other characters to store as variables
       vName = vStringName.replace(' ', '_').replace('\'', '').replace('-', '_').replace('#', '_')

       --If the Skill doesn't currently have a value give it
       --the value of 1
       if not GetVariable(vName):
          vValue = 1
       else
          vValue = int(GetVariable(vName))

       --Check to see if the description of the skill level
       --given by the mud corresponds with the skill level
       --stored in the associated variable, if it does not
       --correct it
       if vDesc == "Unskilled":
          if vValue > 3: vValue = 3
       elseif vDesc == "Tyro":
          if vValue < 4: vValue = 4
          elseif vValue > 9: vValue = 9
       elseif vDesc == "Novice":
          if vValue < 10: vValue = 10
          elseif vValue > 17: vValue = 17
       elseif vDesc == "Beginner":
          if vValue < 18: vValue = 18
          elseif vValue > 29: vValue = 29
       elseif vDesc == "Poor":
          if vValue < 30: vValue = 30
          elseif vValue > 49: vValue = 49
       elseif vDesc == "NVG":
          if vValue < 50: vValue = 50
          elseif vValue > 69: vValue = 69
       elseif vDesc == "Below Average":
          if vValue < 70: vValue = 70
          elseif vValue > 89: vValue = 89
       elseif vDesc == "Average":
          if vValue < 90: vValue = 90
          elseif vValue > 119: vValue = 119
       elseif vDesc == "AA":
          if vValue < 110: vValue = 110
          elseif vValue > 134: vValue = 134
       elseif vDesc == "Able":
          if vValue < 135: vValue = 135
          elseif vValue > 164: vValue = 164
       elseif vDesc == "Fair":
          if vValue < 165: vValue = 165
          elseif vValue > 199: vValue = 199
       elseif vDesc == "Proficient":
          if vValue < 200: vValue = 200
          elseif vValue > 239: vValue = 239
       elseif vDesc == "Good":
          if vValue < 240: vValue = 240
          elseif vValue > 284: vValue = 284
       elseif vDesc == "Adroit":
          if vValue < 285: vValue = 285
          elseif vValue > 334: vValue = 334
       elseif vDesc == "VG":
          if vValue < 335: vValue = 335
          elseif vValue > 389: vValue = 389
       elseif vDesc == "Excellent":
          if vValue < 390: vValue = 390
          elseif vValue > 449: vValue = 449
       elseif vDesc == "Expert":
          if vValue < 450: vValue = 450
          elseif vValue > 514: vValue = 514
       elseif vDesc == "Superb":
          if vValue < 515: vValue = 515
          elseif vValue > 584: vValue = 584
       elseif vDesc == "Master":
          if vValue < 585: vValue = 585
          elseif vValue > 659: vValue = 659
       elseif vDesc == "Eminent":
          if vValue < 660: vValue = 660
          elseif vValue > 739: vValue = 739
       elseif vDesc == "Adept":
          if vValue < 740: vValue = 740
          elseif vValue > 824: vValue = 824
       elseif vDesc == "Renowned":
          if vValue < 825: vValue = 825
          elseif vValue > 919: vValue = 919
       elseif vDesc == "HM":
          if vValue < 920: vValue = 920
          elseif vValue > 1049: vValue = 1049
       elseif vDesc == "Consummate":
          if vValue < 1050: vValue = 1050
          elseif vValue > 1199: vValue = 1199
       elseif vDesc == "Virtuoso":
          if vValue < 1200: vValue = 1200
          elseif vValue > 1399: vValue = 1399
       elseif vDesc == "GM":
          if vValue < 1400: vValue = 1400
          elseif vValue > 1699: vValue = 1699
       elseif vDesc == "Legendary":
          if vValue < 1700: vValue = 1700

       SetVariable(vName, str(vValue))

       --Display the abbreviation, skill, and casting time in
       --standard DM fashion
       ColourTell('#008080', '', str(vAbbr) .. str(vSpace1))
       ColourTell('#FFFFFF', '', str(vStringName) .. str(vSpace2))
       ColourTell('#CCCCCC', '', str(vTime) .. ' ')

       --Check the casting costs and color and display
       if vCost == "very dim red":
          ColourTell('#666666', '', 'very dim ')
          ColourTell('#FF0000', '', 'red' .. str(vSpace3))
       elseif vCost == "dim red":
          ColourTell('#666666', '', 'dim ')
          ColourTell('#FF0000', '', 'red' .. str(vSpace3))
       elseif vCost == "red": ColourTell('#FF0000', '', 'red' .. str(vSpace3))
       elseif vCost == "orangish-red":
          ColourTell('#CC6600', '', 'orangish')
          ColourTell('#CCCCCC', '', '-')
          ColourTell('#FF0000', '', 'red' .. str(vSpace3))
       elseif vCost == "reddish-orange":
          ColourTell('#FF0000', '', 'reddish')
          ColourTell('#CCCCCC', '', '-')
          ColourTell('#CC6600', '', 'orange' .. str(vSpace3))
       elseif vCost == "orange": ColourTell('#CC6600', '', 'orange' .. str(vSpace3))
       elseif vCost == "yellowish-orange":
          ColourTell('#FFFF00', '', 'yellowish')
          ColourTell('#CCCCCC', '', '-')
          ColourTell('#CC6600', '', 'orange' .. str(vSpace3))
       elseif vCost == "orangish-yellow":
          ColourTell('#CC6600', '', 'orangish')
          ColourTell('#CCCCCC', '', '-')
          ColourTell('#FFFF00', '', 'yellow' .. str(vSpace3))
       elseif vCost == "yellow": ColourTell('#FFFF00', '', 'yellow' .. str(vSpace3))
       elseif vCost == "greenish-yellow":
          ColourTell('#00FF00', '', 'greenish')
          ColourTell('#CCCCCC', '', '-')
          ColourTell('#FFFF00', '', 'yellow' .. str(vSpace3))
       elseif vCost == "yellowish-green":
          ColourTell('#FFFF00', '', 'yellowish')
          ColourTell('#CCCCCC', '', '-')
          ColourTell('#00FF00', '', 'green' .. str(vSpace3))
       elseif vCost == "green": ColourTell('#00FF00', '', 'green' .. str(vSpace3))
       elseif vCost == "bluish-green":
          ColourTell('#0000FF', '', 'bluish')
          ColourTell('#CCCCCC', '', '-')
          ColourTell('#00FF00', '', 'green' .. str(vSpace3))
       elseif vCost == "greenish-blue":
          ColourTell('#00FF00', '', 'greenish')
          ColourTell('#CCCCCC', '', '-')
       elseif vCost == "blue": ColourTell('#0000FF', '', 'blue' .. str(vSpace3))

       --Display the description along with the actual variable value
       ColourTell('#CCCCCC', '', str(vDesc))
       ColourTell('#FFFFFF', '', ' [')
       ColourTell('#FF0000', '', str(vValue))
       ColourNote('#FFFFFF', '', ']')
end
    ]]>
    </script>


    </muclient>
